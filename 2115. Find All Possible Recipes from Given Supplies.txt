2115. Find All Possible Recipes from Given Supplies
Medium
1.3K
74
Companies
You have information about n different recipes. You are given a string array recipes and a 2D string array ingredients. The ith recipe has the name recipes[i], and you can create it if you have all the needed ingredients from ingredients[i]. Ingredients to a recipe may need to be created from other recipes, i.e., ingredients[i] may contain a string that is in recipes.

You are also given a string array supplies containing all the ingredients that you initially have, and you have an infinite supply of all of them.

Return a list of all the recipes that you can create. You may return the answer in any order.

Note that two recipes may contain each other in their ingredients.

 

Example 1:

Input: recipes = ["bread"], ingredients = [["yeast","flour"]], supplies = ["yeast","flour","corn"]
Output: ["bread"]
Explanation:
We can create "bread" since we have the ingredients "yeast" and "flour".
Example 2:

Input: recipes = ["bread","sandwich"], ingredients = [["yeast","flour"],["bread","meat"]], supplies = ["yeast","flour","meat"]
Output: ["bread","sandwich"]
Explanation:
We can create "bread" since we have the ingredients "yeast" and "flour".
We can create "sandwich" since we have the ingredient "meat" and can create the ingredient "bread".
Example 3:

Input: recipes = ["bread","sandwich","burger"], ingredients = [["yeast","flour"],["bread","meat"],["sandwich","meat","bread"]], supplies = ["yeast","flour","meat"]
Output: ["bread","sandwich","burger"]
Explanation:
We can create "bread" since we have the ingredients "yeast" and "flour".
We can create "sandwich" since we have the ingredient "meat" and can create the ingredient "bread".
We can create "burger" since we have the ingredient "meat" and can create the ingredients "bread" and "sandwich".
 

Constraints:

n == recipes.length == ingredients.length
1 <= n <= 100
1 <= ingredients[i].length, supplies.length <= 100
1 <= recipes[i].length, ingredients[i][j].length, supplies[k].length <= 10
recipes[i], ingredients[i][j], and supplies[k] consist only of lowercase English letters.
All the values of recipes and supplies combined are unique.
Each ingredients[i] does not contain any duplicate values.
Accepted
59.4K
Submissions
122.3K
Acceptance Rate
48.6%


class Solution
{
	public:
    unordered_map<string, vector<string>> g;

    vector<string> findAllRecipes(vector<string> &recipes, vector<vector<string>> &ingredients, vector<string> &supplies)
    {
        g.clear();
		// Dependancy manager 
        map<string, int> indegree;

       
        for (int i = 0; i < ingredients.size(); i++)
        {
            for (string s : ingredients[i])
            {
				// recpes[i] : Hey, I need s to make me so add me to its list(adjecency list)
                g[s].push_back(recipes[i]);
                indegree[recipes[i]]++;
            }
        }

        queue<string> q;
        
        for(string item : supplies)
        {
			// Hey I dont need any other item to made me, I am alone and can help making others
			  q.push(item);
            
        }

        while(!q.empty())
        {
            string current = q.front();
            q.pop();

            for(string recipe : g[current])
            {
                indegree[recipe]--;
				// Hey wooo!!!, I got all my supplies now I can be used for making other recepies
                if(indegree[recipe] == 0)
                {
                    q.push(recipe);
                }
            }
        }

        vector<string> ans;
        for(string recipe : recipes)
        {
			// Hey, I just made it to the final!!!!! :)
            if(indegree[recipe] == 0)
            {
                ans.push_back(recipe);
            }
        }
        return ans;
    }
};

    QUESTION :-




    ANSWER :-

#include<set>
#include<unordered_map>
#include<queue>


void prepareAdjList(vector<pair<int, int>> edges, unordered_map<int,set<int>> &adj )    {
    
    for(int i=0 ; i<edges.size() ; i++ )    {
        int u = edges[i].first;
        int v= edges[i].second;
        adj[u].insert(v);
        adj[v].insert(u);
    }

}   

void bfs(unordered_map<int,set<int>> &adj, unordered_map<int,bool> &visited, vector<int> &result, int node )    {
    
    queue<int> q;
    q.push(node);
    visited[node]=1;
    
    while(!q.empty())    {
        
        int fnode = q.front();
        q.pop();
        
        result.push_back(fnode);
        
        for( auto it : adj[fnode] )    {
            if(!visited[it])    {
                q.push(it);
                visited[it]=1;
            }
        }
    }
    
}

vector<int> BFS(int vertex, vector<pair<int, int>> edges)    {
    
    unordered_map<int,set<int>> adj;
    unordered_map<int,bool> visited;
    vector<int> result;
    
    prepareAdjList(edges,adj);
    
    for(int i=0 ; i<vertex ; i++ )    {
        if(!visited[i])
            bfs(adj,visited,result,i);
    }

    return result;
 
}